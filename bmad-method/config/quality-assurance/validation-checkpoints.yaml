# Validation Checkpoints Configuration
# Defines validation points throughout the BMad-Method data pipeline

validation_checkpoints:
  
  # Pre-Pipeline Validation Checkpoints
  pre_pipeline:
    # Environment and Configuration Validation
    environment_validation:
      enabled: true
      order: 1
      description: "Validate environment setup and configuration"
      validations:
        - check: environment_variables
          required_vars:
            - DATABASE_URL
            - LOG_LEVEL
            - NODE_ENV
          optional_vars:
            - EXTERNAL_API_URL
            - MONITORING_ENDPOINT
        - check: configuration_files
          required_files:
            - config/quality-assurance/quality-gates.yaml
            - config/quality-assurance/test-suites.yaml
            - config/quality-assurance/monitoring-config.yaml
        - check: system_resources
          min_memory_mb: 1024
          min_disk_space_gb: 5
          max_cpu_usage: 80
      failure_action: block
      
    # Dependency Validation
    dependency_validation:
      enabled: true
      order: 2
      description: "Validate all system dependencies are available"
      validations:
        - check: database_connectivity
          timeout_seconds: 10
        - check: external_services
          services:
            - name: "DuckDB"
              type: database
              required: true
            - name: "External API"
              type: http
              required: false
        - check: npm_dependencies
          package_json_path: package.json
        - check: python_dependencies
          requirements_file: requirements.txt
      failure_action: block

  # Data Ingestion Validation Checkpoints  
  ingestion:
    # Source Data Validation
    source_validation:
      enabled: true
      order: 1
      description: "Validate source data before ingestion"
      validations:
        - check: data_availability
          sources: all
          timeout_minutes: 5
        - check: schema_compatibility
          enforce_strict: true
          allow_new_fields: false
        - check: data_freshness
          max_age_hours: 24
        - check: record_count_bounds
          min_records: 1
          max_variance_percentage: 20
      failure_action: warn
      
    # Ingestion Process Validation
    ingestion_process:
      enabled: true
      order: 2
      description: "Validate data during ingestion process"
      validations:
        - check: pyairbyte_connection
          timeout_seconds: 30
        - check: data_extraction_rate
          min_records_per_minute: 100
        - check: error_rate
          max_error_percentage: 1
        - check: data_completeness
          required_fields: all
          null_tolerance_percentage: 5
      failure_action: block
      
    # Post-Ingestion Validation
    post_ingestion:
      enabled: true
      order: 3
      description: "Validate ingested data quality"
      validations:
        - check: row_count_consistency
          source_vs_target_variance: 2
        - check: data_type_validation
          enforce_schema: true
        - check: duplicate_detection
          tolerance_percentage: 1
        - check: referential_integrity
          foreign_keys: validate
      failure_action: block

  # Data Transformation Validation Checkpoints
  transformation:
    # Pre-Transformation Validation
    pre_transformation:
      enabled: true
      order: 1
      description: "Validate data before transformation"
      validations:
        - check: sqlmesh_model_syntax
          validate_all_models: true
        - check: transformation_dependencies
          check_upstream_data: true
        - check: resource_availability
          min_memory_mb: 2048
          max_cpu_usage: 70
      failure_action: block
      
    # Transformation Process Validation
    transformation_process:
      enabled: true
      order: 2
      description: "Validate transformation execution"
      validations:
        - check: sqlmesh_execution
          timeout_minutes: 10
          cost_optimization: required
        - check: model_test_results
          min_success_rate: 100
        - check: data_lineage_tracking
          completeness: 100
        - check: transformation_performance
          max_execution_time_minutes: 5
      failure_action: block
      
    # Post-Transformation Validation
    post_transformation:
      enabled: true
      order: 3
      description: "Validate transformed data quality"
      validations:
        - check: output_data_quality
          min_quality_score: 85
        - check: business_rule_validation
          custom_rules: enabled
        - check: statistical_validation
          outlier_detection: enabled
          distribution_analysis: enabled
        - check: data_consistency
          cross_model_validation: true
      failure_action: block

  # Data Publication Validation Checkpoints
  publication:
    # Pre-Publication Validation
    pre_publication:
      enabled: true
      order: 1
      description: "Validate data before publication"
      validations:
        - check: evidence_site_health
          components: all
          accessibility_score: 90
        - check: content_validation
          accuracy_threshold: 95
          completeness_check: true
        - check: seo_optimization
          min_score: 80
      failure_action: warn
      
    # Publication Process Validation
    publication_process:
      enabled: true
      order: 2
      description: "Validate publication process"
      validations:
        - check: site_generation
          timeout_minutes: 5
        - check: asset_optimization
          max_bundle_size_mb: 5
        - check: mobile_responsiveness
          test_viewports: [360, 768, 1024, 1920]
        - check: performance_metrics
          max_load_time_seconds: 3
          min_lighthouse_score: 80
      failure_action: warn
      
    # Post-Publication Validation
    post_publication:
      enabled: true
      order: 3
      description: "Validate published content"
      validations:
        - check: site_accessibility
          wcag_level: AA
          min_score: 90
        - check: content_delivery
          cdn_performance: enabled
          cache_effectiveness: 80
        - check: user_experience
          core_web_vitals: validate
          broken_links: check
      failure_action: log

  # Integration and End-to-End Validation Checkpoints
  integration:
    # Cross-Component Validation
    cross_component:
      enabled: true
      order: 1
      description: "Validate integration between components"
      validations:
        - check: data_flow_integrity
          end_to_end: true
          checkpoint_validation: all
        - check: service_communication
          api_contracts: validate
          message_queues: healthy
        - check: shared_resource_usage
          database_connections: optimal
          memory_sharing: safe
      failure_action: block
      
    # End-to-End Pipeline Validation
    end_to_end:
      enabled: true
      order: 2
      description: "Complete pipeline validation"
      validations:
        - check: full_pipeline_execution
          timeout_minutes: 15
          sample_data: realistic
        - check: data_journey_tracking
          lineage_completeness: 100
          audit_trail: complete
        - check: business_outcome_validation
          kpi_alignment: true
          stakeholder_requirements: met
      failure_action: block

# Validation Checkpoint Settings
checkpoint_settings:
  # Execution Configuration
  execution:
    parallel_validation: true          # Run validations in parallel where possible
    max_parallel_checkpoints: 5       # Maximum concurrent validations
    global_timeout_minutes: 30        # Overall timeout for all validations
    retry_failed_validations: true    # Retry failed validations once
    
  # Reporting Configuration
  reporting:
    detailed_logs: true               # Generate detailed validation logs
    checkpoint_metrics: true         # Collect checkpoint performance metrics
    failure_analysis: true           # Analyze patterns in validation failures
    success_tracking: true           # Track validation success rates
    
  # Integration with Quality Gates
  quality_gate_integration:
    enforce_checkpoint_success: true  # Quality gates depend on checkpoint success
    checkpoint_failure_escalation: true # Escalate checkpoint failures
    automated_remediation: false     # Disable automated fixes by default
    
  # Emergency Procedures
  emergency_procedures:
    bypass_enabled: false            # Emergency bypass capability
    bypass_approval_required: true   # Require approval for bypass
    bypass_audit_trail: true        # Log all bypass actions
    bypass_time_limit_hours: 4      # Maximum bypass duration
    
# Checkpoint Scheduling
scheduling:
  # Continuous Validation (for monitoring)
  continuous:
    enabled: true
    interval_minutes: 15             # Check every 15 minutes
    checkpoints:
      - environment_validation
      - dependency_validation
      - source_validation
      
  # Pre-Deployment Validation
  pre_deployment:
    enabled: true
    trigger: deployment_pipeline
    checkpoints: all                 # Run all checkpoints before deployment
    
  # Scheduled Deep Validation
  deep_validation:
    enabled: true
    schedule: "0 2 * * *"            # Daily at 2 AM
    checkpoints:
      - end_to_end
      - cross_component
      - business_outcome_validation